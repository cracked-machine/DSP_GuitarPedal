/*
 * dsp_buffer.hpp
 *
 *  Created on: Apr 2, 2021
 *      Author: chris
 */

#ifndef DSP_BUFFER_HPP_
#define DSP_BUFFER_HPP_


template <class T, size_t size>
class dsp_double_buffer
{

public:
	explicit dsp_double_buffer()
	{
		_rxBuf.fill(0);
		_txBuf.fill(0);
	}

	T* getRxBuf();
	T* getTxBuf();


private:

	//std::unique_ptr<T[]> rxBuf_;
	//std::unique_ptr<T[]> txBuf_;
	std::array<T, size> _rxBuf;
	std::array<T, size> _txBuf;
	//T _rxBuf[size] = {0};



};

template <class T, size_t size> T* dsp_double_buffer<T, size>::getRxBuf()
{
	return _rxBuf.data();	// std::array
	//return _rxBuf;		// C Array
	//return rxBuf_.get();	// std::unique_ptr

}

template <class T, size_t size> T* dsp_double_buffer<T, size>::getTxBuf()
{
	return _txBuf.data();	// std::array
	//return _txBuf;		// C Array
	//return txBuf_.get();	// std::unique_ptr

}
/*
template <class T> T* dsp_double_buffer<T, size_t>::getTxBuf()
{

}
*/

#endif /* DSP_BUFFER_HPP_ */
