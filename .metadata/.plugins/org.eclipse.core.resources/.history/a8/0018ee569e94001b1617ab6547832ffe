/*
 *  	test_dbuffer_getWordPtr.cpp
 *
 *  	Created on: 3 Apr 2021
 *		
 * 		MIT License
 *
 * 		Copyright (c) [2021] [Chris Sutton]
 *
 * 		Permission is hereby granted, free of charge, to any person obtaining a copy
 * 		of this software and associated documentation files (the "Software"), to deal
 * 		in the Software without restriction, including without limitation the rights
 * 		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * 		copies of the Software, and to permit persons to whom the Software is
 * 		furnished to do so, subject to the following conditions:
 *
 * 		The above copyright notice and this permission notice shall be included in all
 * 		copies or substantial portions of the Software.
 *
 * 		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * 		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * 		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * 		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * 		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * 		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * 		SOFTWARE.
 */


#include <double_buffer.hpp>
#include "CppUTest/TestHarness.h"

TEST_GROUP(DbufferGetWordPtrGroup)
{
   void setup()
   {
	  // Init stuff
   }

   void teardown()
   {
	  // Uninit stuff
   }
};

TEST(DbufferGetWordPtrGroup, DbufferRxGetWordPtrLeftChan)
{
	const size_t dsp_buf_size = 4;

	double_buffer<uint16_t, dsp_buf_size> test_dbuf;

	uint32_t *dbufRxDataWord = test_dbuf.getRxBuf32_left_chan();

	uint16_t test_item = 125;

	// send data into Rx buffer frame #0
	dbuf.writeRxFrame( 	&test_item,
						&test_item,
						DBufAllign::eight_bit_r);

	CHECK(*dbufRxDataWord = test_item);
}
